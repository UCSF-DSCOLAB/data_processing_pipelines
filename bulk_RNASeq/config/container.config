process {
   time = '12h'
   memory = '64GB'
   cpus = 1
   clusterOptions = '--exclude=c4-n20'
   container = "/krummellab/data1/singularity_images/bulk_rnaseq/v1/bulk_rna_seq.sif"


   withLabel: 'fastp_trim_adapters' {
      cpus = Math.min(6, params.max_cpus_per_job)
   }

   withLabel: 'sortmerna_ribosomal_rna_removal' {
      cpus = Math.min(13, params.max_cpus_per_job)
      time = '72h'
   }

   withLabel: 'kallisto_quant' {
      cpus = Math.min(4, params.max_cpus_per_job)
   }

   withLabel: 'star_align' {
      cpus = Math.min(8, params.max_cpus_per_job)
      time = '72h'
   }

   withLabel: 'samtools_sort' {
      cpus = Math.min(2, params.max_cpus_per_job)
   }

   withLabel: 'samtools_index' {
      cpus = Math.min(2, params.max_cpus_per_job)
   }

   withLabel: 'samtools_stats' {
      cpus = Math.min(1, params.max_cpus_per_job)
   }

   withLabel: 'samtools_idxstats' {
      cpus = Math.min(2, params.max_cpus_per_job)
   }

   withLabel: 'samtools_flagstat' {
      cpus = Math.min(2, params.max_cpus_per_job)
   }

   withLabel: 'samtools_extract_mapped_reads' {
      cpus = Math.min(2, params.max_cpus_per_job)
   }

   withLabel: 'samtools_bam_to_cram' {
      cpus = Math.min(2, params.max_cpus_per_job)
   }

   withLabel: 'picard_markduplicates' {
      cpus = Math.min(2, params.max_cpus_per_job)
   }

   withLabel: 'gatk4_splitncigarreads' {
      cpus = Math.min(1, params.max_cpus_per_job)
      time = '72h'
   }

   withLabel: 'gatk4_recalibrator' {
      cpus = Math.min(1, params.max_cpus_per_job)
   }

   withLabel: 'gatk4_apply_bqsr' {
      cpus = Math.min(1, params.max_cpus_per_job)
      time = '48h'
   }

   withLabel: 'gatk4_haplotypecaller' {
      cpus = Math.min(1, params.max_cpus_per_job)
      time = '148h'
   }

   withLabel: 'gatk4_variantfiltration' {
      cpus = Math.min(1, params.max_cpus_per_job)
   }

   withLabel: 'bcftools_contig_conversion' {
      cpus = Math.min(4, params.max_cpus_per_job)
   }

   withLabel: 'bcftools_sort_vcf' {
      cpus = Math.min(1, params.max_cpus_per_job)
   }

   withLabel: 'bcftools_index_vcf' {
      cpus = Math.min(1, params.max_cpus_per_job)
   }

   withLabel: 'bcftools_merge_vcf' {
      cpus = Math.min(8, params.max_cpus_per_job)
   }

   withLabel: 'multiqc' {
      cpus = Math.min(1, params.max_cpus_per_job)
   }
}